Collections Framework in Java:
collection of classes that help us manage and manipulate data in a better way
1.ArrayList
Benefits;
 a)This class has many buit-in methods like "add(),  remove(), clear()" etc.
 b)Dynamic and can adjust their size at run time

 Syntax: ArrayList<>   arrayList=new ArrayList<>();
 ArrayList=> name of the class
 <> => diamond operator we specify the data type


 WRAPPER CLASSES
 //wrapper class: provides a way to use primitive data types as reference data types
     //reference data types contain useful methods
     //can be used with collections(ex.ArrayList)
 --------------
 byte=>Byte
 short=>Short
 int=>Integer
 double=>Double
 char=>Character
 long=>Long
Autoboxing:the automatic conversion that the Java compiler makes between the primitive data types and their
corresponding object wrapper classes
unboxing: the reverse of autoboxing.Automatic conversion of wrapper class tp primitive

For example:
int i=5;
Integer ii=new Integer(i); //Boxing
Integer jj=i; //autoboxing
int  j=jj.intValue(); //unboxing
int k=jj; //autoboxing
ArrayList<Integer> values=new ArrayList<Integer>();
values.add(5);
values.add(7);
values.add("Navin");
